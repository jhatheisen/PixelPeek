{"ast":null,"code":"// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\nconst setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\nconst initialState = {\n  user: null\n};\nexport const authenticate = () => async dispatch => {\n  const response = await fetch(\"/api/auth/\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return;\n    }\n    dispatch(setUser(data));\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const response = await fetch(\"/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport const logout = () => async dispatch => {\n  const response = await fetch(\"/api/auth/logout\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\nexport const signUp = (username, email, password) => async dispatch => {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER:\n      return {\n        user: action.payload\n      };\n    case REMOVE_USER:\n      return {\n        user: null\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","initialState","authenticate","dispatch","response","fetch","headers","ok","data","json","errors","login","email","password","method","body","JSON","stringify","status","logout","signUp","username","reducer","state","action"],"sources":["/home/jlin231/App_Academy/PixelPeek/react-app/src/store/session.js"],"sourcesContent":["// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\n\nconst setUser = (user) => ({\n\ttype: SET_USER,\n\tpayload: user,\n});\n\nconst removeUser = () => ({\n\ttype: REMOVE_USER,\n});\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch(setUser(data));\n\t}\n};\n\nexport const login = (email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/login\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport const logout = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/logout\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\n\tif (response.ok) {\n\t\tdispatch(removeUser());\n\t}\n};\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/signup\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport default function reducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\treturn { user: action.payload };\n\t\tcase REMOVE_USER:\n\t\t\treturn { user: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}