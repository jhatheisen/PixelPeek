{"ast":null,"code":"import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nvar nullListeners = {\n  notify: function notify() {}\n};\nfunction createListenerCollection() {\n  var batch = getBatch();\n  var first = null;\n  var last = null;\n  return {\n    clear: function clear() {\n      first = null;\n      last = null;\n    },\n    notify: function notify() {\n      batch(function () {\n        var listener = first;\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n    get: function get() {\n      var listeners = [];\n      var listener = first;\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n      return listeners;\n    },\n    subscribe: function subscribe(callback) {\n      var isSubscribed = true;\n      var listener = last = {\n        callback: callback,\n        next: null,\n        prev: last\n      };\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n  };\n}\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(store, parentSub) {\n    this.store = store;\n    this.parentSub = parentSub;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n    this.handleChangeWrapper = this.handleChangeWrapper.bind(this);\n  }\n  var _proto = Subscription.prototype;\n  _proto.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n  _proto.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n  _proto.handleChangeWrapper = function handleChangeWrapper() {\n    if (this.onStateChange) {\n      this.onStateChange();\n    }\n  };\n  _proto.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n  _proto.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);\n      this.listeners = createListenerCollection();\n    }\n  };\n  _proto.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n  return Subscription;\n}();\nexport { Subscription as default };","map":{"version":3,"names":["getBatch","nullListeners","notify","createListenerCollection","batch","first","last","clear","listener","callback","next","get","listeners","push","subscribe","isSubscribed","prev","unsubscribe","Subscription","store","parentSub","handleChangeWrapper","bind","_proto","prototype","addNestedSub","trySubscribe","notifyNestedSubs","onStateChange","Boolean","tryUnsubscribe","default"],"sources":["/home/jlin231/App_Academy/PixelPeek/react-app/node_modules/react-redux/es/utils/Subscription.js"],"sourcesContent":["import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  var batch = getBatch();\n  var first = null;\n  var last = null;\n  return {\n    clear: function clear() {\n      first = null;\n      last = null;\n    },\n    notify: function notify() {\n      batch(function () {\n        var listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n    get: function get() {\n      var listeners = [];\n      var listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n    subscribe: function subscribe(callback) {\n      var isSubscribed = true;\n      var listener = last = {\n        callback: callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n  };\n}\n\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(store, parentSub) {\n    this.store = store;\n    this.parentSub = parentSub;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n    this.handleChangeWrapper = this.handleChangeWrapper.bind(this);\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  _proto.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  _proto.handleChangeWrapper = function handleChangeWrapper() {\n    if (this.onStateChange) {\n      this.onStateChange();\n    }\n  };\n\n  _proto.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  _proto.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  _proto.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\nexport { Subscription as default };"],"mappings":"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"},"metadata":{},"sourceType":"module"}